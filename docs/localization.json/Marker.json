{
    "Marker": {
        "properties": {},
        "methods": {
            "markText": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@description",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "mark text on image"
                                }
                            ]
                        },
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "image url or base64 string"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```ts\nconst options = {\n backgroundImage: {\n  src: require('./images/test.jpg'),\n  scale: 1,\n  rotate: 20,\n  alpha: 0.5,\n },\n watermarkTexts: [\n {\n   text: 'hello',\n   positionOptions: {\n     position: Position.center,\n   },\n   style: {\n     color: '#ff00ff',\n     fontSize: 30,\n     fontName: 'Arial',\n     rotate: 30,\n     shadowStyle: {\n       dx: 10,\n       dy: 10,\n       radius: 10,\n       color: '#ffaa22',\n     },\n     textBackgroundStyle: {\n       paddingX: 10,\n       paddingY: 10,\n       type: TextBackgroundType.none,\n       color: '#faaaff',\n     },\n     underline: true,\n     strikeThrough: true,\n     textAlign: 'left',\n     italic: true,\n     bold: true,\n   },\n },\n {\n   text: 'world',\n   positionOptions: {\n     X: 10,\n     Y: 10,\n   },\n   style: {\n    color: '#AAFFDD',\n    fontSize: 30,\n    fontName: 'Arial',\n    rotate: 170,\n    shadowStyle: {\n     dx: 10,\n     dy: 10,\n     radius: 10,\n     color: '#ffaa22',\n    },\n    textBackgroundStyle: {\n     paddingX: 10,\n     paddingY: 10,\n     type: TextBackgroundType.stretchX,\n     color: '#faaaff',\n    },\n    textAlign: 'right',\n    skewX: 10,\n ],\n scale: 1,\n quality: 100,\n filename: 'test',\n saveFormat: ImageFormat.png,\n maxSize: 1000,\n};\nImageMarker.markText(options).then((res) => {\n console.log(res);\n}).catch((err) => {\n console.log(err);\n});\n// or\nawait ImageMarker.markText(options);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": []
                }
            },
            "markImage": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@description",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "mark image on background image"
                                }
                            ]
                        },
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "image url or base64 string"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```ts\nconst options = {\n backgroundImage: {\n   src: require('./images/test.jpg'),\n   scale: 1,\n   rotate: 20,\n   alpha: 0.5,\n },\n watermarkImage: {\n   src: require('./images/watermark.png'),\n   scale: 1,\n   rotate: 20,\n   alpha: 0.5,\n },\n watermarkPositions: {\n   position: Position.center,\n },\n quality: 100,\n filename: 'test',\n saveFormat: ImageFormat.png,\n maxSize: 1000,\n};\nImageMarker.markImage(options).then((res) => {\n console.log(res);\n}).catch((err) => {\n console.log(err);\n});\n// or\nawait ImageMarker.markImage(options);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": []
                }
            }
        },
        "accessors": {}
    }
}